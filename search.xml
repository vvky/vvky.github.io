<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于flask和es的日志系统</title>
      <link href="/2024/05/17/%E5%9F%BA%E4%BA%8Eflask%E5%92%8Ces%E7%9A%84%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
      <url>/2024/05/17/%E5%9F%BA%E4%BA%8Eflask%E5%92%8Ces%E7%9A%84%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><p>python3.8、flask2.3、elasticsearch8.13</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask==2.3</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install elasticsearch==8.13</span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p><code>tools/es_logger.py</code> es日志工具类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, psutil</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"><span class="keyword">from</span> tools.es_client <span class="keyword">import</span> CustomEsClient</span><br><span class="line"></span><br><span class="line">es = CustomEsClient()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ElasticsearchLogger</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, es_client, index</span>):</span><br><span class="line">        self.es_client = es_client</span><br><span class="line">        self.index = index</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> es.indices.exists(index=index):</span><br><span class="line">            es.indices.create(index=index, ignore=<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create_document</span>(<span class="params">self, request_id, remote_addr, request_url, path, method, headers, args, body, form</span>):</span><br><span class="line">        doc = &#123;</span><br><span class="line">            <span class="string">&#x27;@timestamp&#x27;</span>: <span class="built_in">int</span>(time.time()) * <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&#x27;request_id&#x27;</span>: request_id,</span><br><span class="line">            <span class="string">&#x27;address&#x27;</span>: remote_addr,</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>: request_url,</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>: path,</span><br><span class="line">            <span class="string">&#x27;method&#x27;</span>: method,</span><br><span class="line">            <span class="string">&#x27;headers&#x27;</span>: <span class="built_in">dict</span>(headers),</span><br><span class="line">            <span class="string">&#x27;args&#x27;</span>: <span class="built_in">dict</span>(args),</span><br><span class="line">            <span class="string">&#x27;body&#x27;</span>: body <span class="keyword">if</span> body <span class="keyword">else</span> &#123;&#125;,</span><br><span class="line">            <span class="string">&#x27;form&#x27;</span>: <span class="built_in">dict</span>(form),</span><br><span class="line">            <span class="string">&#x27;logs&#x27;</span>: [],</span><br><span class="line">            <span class="string">&#x27;system&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;free_memory&#x27;</span>: <span class="string">f&quot;<span class="subst">&#123;psutil.virtual_memory().available / <span class="number">1024</span> / <span class="number">1024</span> / <span class="number">1024</span>&#125;</span> GB&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;free_disk&#x27;</span>: <span class="string">f&quot;<span class="subst">&#123;psutil.disk_usage(<span class="string">&#x27;/&#x27;</span>).free / <span class="number">1024</span> / <span class="number">1024</span> / <span class="number">1024</span>&#125;</span> GB&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;current_hostname&#x27;</span>: psutil.users()[<span class="number">0</span>].name</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        self.es_client.index(index=self.index, <span class="built_in">id</span>=request_id, body=doc)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">log_message</span>(<span class="params">self, request_id, message, level=<span class="string">&#x27;INFO&#x27;</span></span>):</span><br><span class="line">        logger.debug(<span class="string">f&quot;Request <span class="subst">&#123;request_id&#125;</span>: <span class="subst">&#123;message&#125;</span>&quot;</span>)</span><br><span class="line">        log_entry = &#123;</span><br><span class="line">            <span class="string">&#x27;@timestamp&#x27;</span>: datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: level,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>: message</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        self.es_client.update(index=self.index, <span class="built_in">id</span>=request_id, body=&#123;</span><br><span class="line">            <span class="string">&#x27;script&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;source&#x27;</span>: <span class="string">&#x27;ctx._source.logs.add(params.log_entry)&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;lang&#x27;</span>: <span class="string">&#x27;painless&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;params&#x27;</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;log_entry&#x27;</span>: log_entry</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_index = <span class="string">f&#x27;flask-logs-<span class="subst">&#123;datetime.now().strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">es_logger = ElasticsearchLogger(es, _index)</span><br></pre></td></tr></table></figure><p><code>flask app层</code>，使用钩子函数，实现请求前后调用日志处理器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> tools.es_logger <span class="keyword">import</span> es_logger</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, g</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start_request</span>():</span><br><span class="line">    g.request_id = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line">    es_logger.create_document(g.request_id, request.remote_addr, request.url, request.path, request.method,</span><br><span class="line">                              request.headers, request.args, request.json, request.form)</span><br><span class="line">    es_logger.log_message(g.request_id, <span class="string">&#x27;上行接口 请求开始&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.after_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">end_request</span>(<span class="params">response</span>):</span><br><span class="line">    es_logger.log_message(g.request_id, <span class="string">&#x27;上行接口 请求结束&#x27;</span>, response.status_code)</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> g</span><br><span class="line">es_logger.log_message(g.request_id, <span class="string">&quot;心跳日志保存成功&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日志效果"><a href="#日志效果" class="headerlink" title="日志效果"></a>日志效果</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;flask-logs-2024-05-16&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fcc0f207-54e8-4405-afd5-89b6fadcc301&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1715850961000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;request_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fcc0f207-54e8-4405-afd5-89b6fadcc301&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://127.0.0.1:19899/api/v1/terminals/gateway&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/api/v1/terminals/gateway&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;POST&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;User-Agent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Content-Type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;application/json&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Accept&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*/*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Cache-Control&quot;</span><span class="punctuation">:</span> <span class="string">&quot;no-cache&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Postman-Token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;08f7e379-d39e-48ed-a1f0-468e3f00318a&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1:19899&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Accept-Encoding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gzip, deflate, br&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Connection&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keep-alive&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Content-Length&quot;</span><span class="punctuation">:</span> <span class="string">&quot;553&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;messageHeader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;terminalPhoneNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18832301609&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;messageId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;register&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;messageSerialNumber&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;messageBody&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;terminalModel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RCM-BK6MZJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;vehicleIdentifier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;京a12345&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;manufacturerId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;44030&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;terminalId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;w12345678&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;provinceId&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;cityCountyId&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;plateColor&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0100002d018832301609000100000000343430333052434d2d424b364d5a4a000000000000000000007731323334353600bea9613132333435ae7e&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;checkCode&quot;</span><span class="punctuation">:</span> <span class="number">45</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;form&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;logs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上行接口 请求开始&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SUCCESS&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;网关初始化成功！&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;消息ID校验通过！register&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;开始处理消息！register&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;终端注册请求体：&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;正在校验终端注册信息！&#123;&#x27;query&#x27;: &#123;&#x27;bool&#x27;: &#123;&#x27;must&#x27;: [&#123;&#x27;match&#x27;: &#123;&#x27;messageBody.terminalId&#x27;: &#x27;w12345678&#x27;&#125;&#125;]&#125;&#125;&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;响应消息：终端注册失败！终端ID已存在！w12345678 异常信息：None 响应数据：&#123;&#x27;message&#x27;: &#x27;终端注册失败！终端ID已存在！w12345678&#x27;, &#x27;code&#x27;: 0, &#x27;requestId&#x27;: &#x27;fcc0f207-54e8-4405-afd5-89b6fadcc301&#x27;, &#x27;content&#x27;: &#123;&#x27;responseSerialNumber&#x27;: 1, &#x27;authenticationCode&#x27;: &#x27;&#x27;, &#x27;result&#x27;: &#x27;1&#x27;&#125;&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;响应消息：上行网关响应成功！ 异常信息：None 响应数据：&#123;&#x27;message&#x27;: &#x27;上行网关响应成功！&#x27;, &#x27;code&#x27;: None, &#x27;requestId&#x27;: &#x27;fcc0f207-54e8-4405-afd5-89b6fadcc301&#x27;, &#x27;content&#x27;: &#123;&#x27;message&#x27;: &#x27;终端注册失败！终端ID已存在！w12345678&#x27;, &#x27;code&#x27;: 0, &#x27;requestId&#x27;: &#x27;fcc0f207-54e8-4405-afd5-89b6fadcc301&#x27;, &#x27;content&#x27;: &#123;&#x27;responseSerialNumber&#x27;: 1, &#x27;authenticationCode&#x27;: &#x27;&#x27;, &#x27;result&#x27;: &#x27;1&#x27;&#125;&#125;&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-16 17:16:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上行接口 请求结束&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;system&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;free_memory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3.1894683837890625 GB&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;free_disk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;133.49493408203125 GB&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;current_hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wangkaiyu&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自定义初始化操作</title>
      <link href="/2024/05/14/python%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/"/>
      <url>/2024/05/14/python%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>用python避免不了各种恶心的导包路径问题或字符编码问题，使用如下方式可在python解释器启动时自动执行一些初始化操作。 </p><p>在<code>site-packages</code>目录下创建<code>sitecustomize.py</code>文件，添加自定义操作，如:</p><p>这里使用的是<code>Miniconda</code>，<code>site-packages</code>目录在<code>/root/miniconda3/lib/python3.12/site-packages</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">&quot;/home/wangkaiyu/test&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云OSS上传回调</title>
      <link href="/2024/04/26/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E4%B8%8A%E4%BC%A0%E5%9B%9E%E8%B0%83/"/>
      <url>/2024/04/26/%E9%98%BF%E9%87%8C%E4%BA%91OSS%E4%B8%8A%E4%BC%A0%E5%9B%9E%E8%B0%83/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">__doc__ = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">🤮🤮🤮 阿里云的各种文档是真傻逼，牛头不对马嘴。</span></span><br><span class="line"><span class="string">下面演示‘put_object’上传接口的回调功能。(&#x27;put_object_from_file&#x27;也属于&#x27;PutObject&#x27;)</span></span><br><span class="line"><span class="string">该方法适用于前端上传文件对接阿里云，阿里云把文件信息回调给服务端落库存储。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> oss2</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从环境变量提取敏感配置确实是好习惯，因为我的macbook修改了默认bash，这里要先从ohmyzsh中加载环境变量到默认的env中</span></span><br><span class="line">hostname = socket.gethostname()</span><br><span class="line"><span class="keyword">if</span> hostname == <span class="string">&quot;DESKTOP-14.local&quot;</span>:</span><br><span class="line">    result = subprocess.run(</span><br><span class="line">        [<span class="string">&quot;/bin/zsh&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;source ~/.zshrc.pre-oh-my-zsh &amp;&amp; env&quot;</span>],</span><br><span class="line">        capture_output=<span class="literal">True</span>,</span><br><span class="line">        text=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> result.stdout.splitlines():</span><br><span class="line">        key, value = line.split(<span class="string">&quot;=&quot;</span>, <span class="number">1</span>)</span><br><span class="line">        os.environ[key] = value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最好使用一个阿里云子账户的access_key_id和access_key_secret</span></span><br><span class="line">access_key_id = os.getenv(<span class="string">&#x27;OSS_ACCESS_KEY_ID&#x27;</span>, <span class="string">&#x27;&lt;AccessKeyId&gt;&#x27;</span>)</span><br><span class="line">access_key_secret = os.getenv(<span class="string">&#x27;OSS_ACCESS_KEY_SECRET&#x27;</span>, <span class="string">&#x27;&lt;AccessKeySecret&gt;&#x27;</span>)</span><br><span class="line">bucket_name = os.getenv(<span class="string">&#x27;OSS_BUCKET_NAME&#x27;</span>, <span class="string">&#x27;vvky&#x27;</span>)</span><br><span class="line"><span class="comment"># 注意是http!</span></span><br><span class="line">endpoint = <span class="string">&#x27;http://oss-cn-beijing.aliyuncs.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查一下环境变量</span></span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> (access_key_id, access_key_secret, bucket_name, endpoint):</span><br><span class="line">    <span class="keyword">assert</span> <span class="string">&#x27;&lt;&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> param, <span class="string">&#x27;环境变量缺失！&#x27;</span> + param</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本次测试的文件，put_object接口支持这种直接命名+指定内容的方式</span></span><br><span class="line">key = <span class="string">&#x27;test.txt&#x27;</span></span><br><span class="line">content = <span class="string">&quot;莫道石人一只眼，挑动黄河天下反&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到文本md5，注意阿里云oss的utils.content_md5返回的是b64编码后的字符串！里面还有很多好玩的工具函数</span></span><br><span class="line">content_md5 = oss2.utils.content_md5(content)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;上传文件的b64(md5)是: <span class="subst">&#123;content_md5&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建bucket对象，所有针对object的API都可以通过bucket对象来调用</span></span><br><span class="line">bucket = oss2.Bucket(oss2.Auth(access_key_id, access_key_secret), endpoint, bucket_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建回调参数，文档： https://help.aliyun.com/document_detail/31989.html</span></span><br><span class="line">callback_dict = &#123;</span><br><span class="line">    <span class="comment"># 这玩意死活不好使，反正也用不到</span></span><br><span class="line">    <span class="comment"># callback_dict[&#x27;callbackHost&#x27;] = &#x27;43.140.212.195:8899&#x27;,</span></span><br><span class="line">    <span class="comment"># 回调接口，必须为POST，支持http/https，此处写的是我的腾讯云临时接口</span></span><br><span class="line">    <span class="string">&#x27;callbackUrl&#x27;</span>: <span class="string">&#x27;http://43.140.212.195:8899/test&#x27;</span>,</span><br><span class="line">    <span class="comment"># 部分回调参数释义：</span></span><br><span class="line">    <span class="comment">#     contentMd5：上传文件的MD5值</span></span><br><span class="line">    <span class="comment">#     imageInfo.format：图片格式</span></span><br><span class="line">    <span class="comment">#     object：对象（文件）的完整路径。（oss file name）</span></span><br><span class="line">    <span class="comment">#     bucket：上传文件的bucket</span></span><br><span class="line">    <span class="comment">#     size：上传的Object大小</span></span><br><span class="line">    <span class="comment">#     mimeType：上传文件的资源类型</span></span><br><span class="line">    <span class="comment">#     clientIp：发起请求的客户端IP地址</span></span><br><span class="line">    <span class="comment">#     reqId：发起请求的RequestId</span></span><br><span class="line">    <span class="comment">#     operation：操作类型，PutObject</span></span><br><span class="line">    <span class="comment"># 两种写法：</span></span><br><span class="line">    <span class="comment"># form-urlencoded</span></span><br><span class="line">    <span class="string">&#x27;callbackBody&#x27;</span>: <span class="string">&#x27;operation=$&#123;operation&#125;&amp;clientIp=$&#123;clientIp&#125;&amp;contentMd5=$&#123;contentMd5&#125;&amp;imageInfo.format=$&#123;imageInfo.format&#125;&amp;object=$&#123;object&#125;&amp;bucket=$&#123;bucket&#125;&amp;object=$&#123;object&#125;&amp;size=$&#123;size&#125;&amp;mimeType=$&#123;mimeType&#125;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;callbackBodyType&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">    <span class="comment"># json</span></span><br><span class="line">    <span class="comment"># &quot;callbackBody&quot;:&quot;&#123;\&quot;mimeType\&quot;:$&#123;mimeType&#125;,\&quot;size\&quot;:$&#123;size&#125;&#125;&quot;,</span></span><br><span class="line">    <span class="comment"># &#x27;callbackBodyType&#x27;: &#x27;application/json&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重点：回调参数是json格式，并b64编码</span></span><br><span class="line">callback_param = json.dumps(callback_dict).strip()</span><br><span class="line">base64_callback_body = oss2.utils.b64encode_as_string(callback_param)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回调参数编码后放在headers中</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;x-oss-callback&#x27;</span>: base64_callback_body&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带上headers上传，即可触发回调</span></span><br><span class="line">result = bucket.put_object(key, content, headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：上传并回调成功status==200，上传成功但回调失败status==203</span></span><br><span class="line"><span class="keyword">if</span> result.status == <span class="number">200</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;上传文件成功！<span class="subst">&#123;result.status&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> result.status == <span class="number">203</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;上传文件成功但回调失败！<span class="subst">&#123;result.status&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;上传文件失败！<span class="subst">&#123;result.status&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以在resp中检查回调服务的响应结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;回调服务的响应结果: <span class="subst">&#123;result.resp.read()&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># assert result.resp.read() != &#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查文件是否上传成功，head_object 用于获取文件元信息，还记得key吗，就是上面的文件名</span></span><br><span class="line">result = bucket.head_object(key)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;文件上传成功！<span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除刚刚上传的测试文件，使用delete_object，更多用法去源码里看，写的很不错。</span></span><br><span class="line">bucket.delete_object(key)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;测试文件已删除！<span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># OK了，你已经掌握oss的上传回调了。</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;🐂🍺&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> OSS </tag>
            
            <tag> Python </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关闭ES警告</title>
      <link href="/2024/04/26/%E5%85%B3%E9%97%ADES%E8%AD%A6%E5%91%8A/"/>
      <url>/2024/04/26/%E5%85%B3%E9%97%ADES%E8%AD%A6%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>es总提示这条警告</p><blockquote><p>“Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to<br>anyone. See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.13/security-minimal-setup.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.13/security-minimal-setup.html</a> to enable<br>security.”</p></blockquote><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>是未配置安全插件的警告，在<code>elasticsearch.yml</code>关闭<code>xpack.security.enabled</code>即可</p><h4 id="查看当前容器"><a href="#查看当前容器" class="headerlink" title="查看当前容器"></a>查看当前容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                                              NAMES</span><br><span class="line">57871902f4a4        java-16.45             &quot;java -jar app.jar&quot;      7 weeks ago         Up 7 weeks          0.0.0.0:8899-&gt;8899/tcp                             java-16.45</span><br><span class="line">843c605b7aaa        elasticsearch:7.13.2   &quot;/bin/tini -- /usr...&quot;   8 weeks ago         Up 5 minutes        0.0.0.0:19399-&gt;9200/tcp, 0.0.0.0:19398-&gt;9300/tcp   es</span><br></pre></td></tr></table></figure><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 843c605b7aaa /bin/bash</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi config/elasticsearch.yml</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpack.security.enabled: false</span><br></pre></td></tr></table></figure><h4 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart 843c605b7aaa</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的Elasticsearch无法连接ES</title>
      <link href="/2024/04/24/Python%E7%9A%84Elasticsearch%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5ES/"/>
      <url>/2024/04/24/Python%E7%9A%84Elasticsearch%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5ES/</url>
      
        <content type="html"><![CDATA[<p>python3.9</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br><span class="line"></span><br><span class="line">host = <span class="string">&#x27;192.168.1.165&#x27;</span></span><br><span class="line">port = <span class="number">19399</span></span><br><span class="line">es = Elasticsearch([&#123;<span class="string">&#x27;host&#x27;</span>: host, <span class="string">&#x27;port&#x27;</span>: port, <span class="string">&#x27;scheme&#x27;</span>: <span class="string">&#x27;http&#x27;</span>&#125;])</span><br><span class="line"><span class="built_in">print</span>(es.ping())</span><br></pre></td></tr></table></figure><p>夸夸报错：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch.UnsupportedProductError: </span><br><span class="line">The client noticed that the server is not Elasticsearch and we do not support </span><br></pre></td></tr></table></figure><p>但是requests却可以访问<code>http://192.168.1.165:19399/</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;843c605b7aaa&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cluster_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docker-cluster&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cluster_uuid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tzo9vQLTQ-eHosFP0LrqyQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7.13.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_flavor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docker&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4d960a0733be83dd2543ca018aa4ddc42e956800&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-06-10T21:01:55.251515791Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_snapshot&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lucene_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.8.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minimum_index_compatibility_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tagline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>发现<code>ES</code>版本是<code>7.13.2</code>，查看<code>Python Elasticsearch</code>的版本，是他妈<code>8.13.0</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show elasticsearch</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Name: elasticsearch</span><br><span class="line">Version: 8.13.0</span><br><span class="line">Summary: Python client for Elasticsearch</span><br><span class="line">Home-page: https://github.com/elastic/elasticsearch-py</span><br><span class="line">Author: Elastic Client Library Maintainers</span><br><span class="line">Author-email: client-libs@elastic.co</span><br><span class="line">License: Apache-2.0</span><br><span class="line">Location: /Users/wangkaiyu/Documents/个人练习/practice/miniconda3/lib/python3.11/site-packages</span><br><span class="line">Requires: elastic-transport</span><br><span class="line">Required-by: </span><br></pre></td></tr></table></figure><p>原因：python的es包和<code>ES</code>的版本不匹配，要保持大版本一致。（7.13.1也可以）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install elasticsearch==7.13.2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tcp socket回忆录</title>
      <link href="/2024/04/24/tcp%20socket%E5%9B%9E%E5%BF%86%E5%BD%95/"/>
      <url>/2024/04/24/tcp%20socket%E5%9B%9E%E5%BF%86%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>这几天接了一个tcp&#x2F;udp系统集成的需求，死去的知识开始攻击我。<br>大二时学这玩意，用类似于下图的这个客户端工具，在局域网内练习互发消息。</p><img src="/2024/04/24/tcp%20socket%E5%9B%9E%E5%BF%86%E5%BD%95/image-20240424122417891.png" class="" title="image-20240424122417891"><p>别人实践课：创建套接字，绑定ip端口，编辑hello world，send….</p><p>我：多线程（本质还是多进程）遍历局域网网段，狠狠地while True发送乱码消息，然后看着别人的工具卡死。</p><p>目前做了个demo，dms client&gt;tcp&gt;es&gt;mysql&gt;http&gt;钉钉…</p><p>晚点再写。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pycharm2022卡死</title>
      <link href="/2024/04/23/pycharm%E5%8D%A1%E6%AD%BB/"/>
      <url>/2024/04/23/pycharm%E5%8D%A1%E6%AD%BB/</url>
      
        <content type="html"><![CDATA[<p>逆天</p><img src="/2024/04/23/pycharm%E5%8D%A1%E6%AD%BB/image-20240423231412682.png" class="" title="image-20240423231412682">]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gps和gprs的区别</title>
      <link href="/2024/04/19/gps%E5%92%8Cgprs%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2024/04/19/gps%E5%92%8Cgprs%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="一-GPS（全球定位系统-global-position-system）"><a href="#一-GPS（全球定位系统-global-position-system）" class="headerlink" title="一. GPS（全球定位系统 global position system）"></a>一. GPS（全球定位系统 global position system）</h2><p>是一种定位技术，用来确认物体的经纬度位置</p><p>维基百科：<a href="https://zh.wikipedia.org/zh-hans/GPS">https://zh.wikipedia.org/zh-hans/GPS</a></p><h2 id="二-GPRS（通用分组无线数据服务-general-packet-radio-service）"><a href="#二-GPRS（通用分组无线数据服务-general-packet-radio-service）" class="headerlink" title="二. GPRS（通用分组无线数据服务 general packet radio service）"></a>二. GPRS（通用分组无线数据服务 general packet radio service）</h2><p>只是一种数据传输方式，用来传递数据组群，如同发送手机短信，不具备定位功能 </p><p>维基百科：<a href="https://zh.wikipedia.org/zh-hans/GPRS">https://zh.wikipedia.org/zh-hans/GPRS</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 科普 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html嵌入微博关注按钮</title>
      <link href="/2024/04/19/html%E5%B5%8C%E5%85%A5%E5%BE%AE%E5%8D%9A%E5%85%B3%E6%B3%A8%E6%8C%89%E9%92%AE/"/>
      <url>/2024/04/19/html%E5%B5%8C%E5%85%A5%E5%BE%AE%E5%8D%9A%E5%85%B3%E6%B3%A8%E6%8C%89%E9%92%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:wb</span>=<span class="string">&quot;http://open.weibo.com/wb&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://tjs.sjs.sinajs.cn/open/api/js/wb.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;weibo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wb:follow-button</span> <span class="attr">uid</span>=<span class="string">&quot;微博uid&quot;</span> <span class="attr">width</span>=<span class="string">&quot;136&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">wb:follow-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>微博的uid：在任何人的微博主页，复制分享链接，后缀就是uid</p><p>比如日娃的微博：<a href="https://weibo.com/u/1865990891">https://weibo.com/u/1865990891</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2024/04/19/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/04/19/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="查看远程仓库信息"><a href="#查看远程仓库信息" class="headerlink" title="查看远程仓库信息"></a>查看远程仓库信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="查看代码所在分支"><a href="#查看代码所在分支" class="headerlink" title="查看代码所在分支"></a>查看代码所在分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -v</span><br></pre></td></tr></table></figure><h3 id="查看远程分支列表"><a href="#查看远程分支列表" class="headerlink" title="查看远程分支列表"></a>查看远程分支列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure><h3 id="查看本地分支列表"><a href="#查看本地分支列表" class="headerlink" title="查看本地分支列表"></a>查看本地分支列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><h3 id="查看所有分支列表"><a href="#查看所有分支列表" class="headerlink" title="查看所有分支列表"></a>查看所有分支列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><ol><li>创建新branch</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure><ol start="2"><li>切换回主分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure><ol start="3"><li>合并新分支到主分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure><ol start="4"><li>push</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><h3 id="切换分支或指定版本"><a href="#切换分支或指定版本" class="headerlink" title="切换分支或指定版本"></a>切换分支或指定版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [branch name]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [version <span class="built_in">hash</span>]</span><br></pre></td></tr></table></figure><h3 id="修改上一次提交详情"><a href="#修改上一次提交详情" class="headerlink" title="修改上一次提交详情"></a>修改上一次提交详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><p>会进入一个vim编辑页面，然后重新提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure><h3 id="将日志写入文件"><a href="#将日志写入文件" class="headerlink" title="将日志写入文件"></a>将日志写入文件</h3><p>默认写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> &gt; ./git.log</span><br></pre></td></tr></table></figure><p>格式化写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --format=<span class="string">&quot;hash：%H%n提交人：%an &lt;%ae&gt;%n日期：%ad%n更新内容：%s%n&quot;</span> &gt; git.log</span><br></pre></td></tr></table></figure><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><p>例如，dev合并到master</p><ol><li><strong>切换到</strong><code>master</code>分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master </span><br></pre></td></tr></table></figure><ol start="2"><li><strong>更新</strong><code>master</code>分支：</li></ol><p>在合并前，确保<code>master</code>分支是最新的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull </span><br></pre></td></tr></table></figure><ol start="3"><li><strong>合并</strong><code>dev</code>分支到<code>master</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev </span><br></pre></td></tr></table></figure><ol start="4"><li><strong>可能出现的冲突</strong></li></ol><p>如果在合并过程出现冲突，需要手动解决，然后再添加新的更改到git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br></pre></td></tr></table></figure><ol start="5"><li><strong>提交推送</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;Merge dev into master&quot;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker部署redis（centos7.9）</title>
      <link href="/2024/04/17/docker%E9%83%A8%E7%BD%B2redis%EF%BC%88centos7.9%EF%BC%89/"/>
      <url>/2024/04/17/docker%E9%83%A8%E7%BD%B2redis%EF%BC%88centos7.9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-创建数据目录和配置文件目录"><a href="#1-创建数据目录和配置文件目录" class="headerlink" title="1. 创建数据目录和配置文件目录"></a>1. 创建数据目录和配置文件目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p  /data/redis/data</span><br></pre></td></tr></table></figure><p><code>/data/redis</code>配置文件放宿主机的配置文件</p><p><code>/data/redis/data</code>持久化文件和容器的配置文件</p><p>启动容器后，<code>/data/redis/data</code>下还会有一层&#x2F;redis，里面就是容器的配置文件</p><h2 id="2-创建自定义配置文件"><a href="#2-创建自定义配置文件" class="headerlink" title="2. 创建自定义配置文件"></a>2. 创建自定义配置文件</h2><p>参考链接：<a href="https://gitee.com/wangyue123com_admin/helpdocument/blob/master/package/redis.conf">https://gitee.com/wangyue123com_admin&#x2F;helpdocument&#x2F;blob&#x2F;master&#x2F;package&#x2F;redis.conf</a></p><p>并修改若干配置，如：密码requirepass, 绑定地址bind，端口号port, 后台运行daemonize</p><p><code>daemonize</code>守护进程默认为<code>no</code>，在docker中下是正确的，因为：</p><p>容器与进程：<br>容器是围绕单个进程设计的。当该进程终止时，容器也会停止。因此，在Docker容器中运行的应用程序通常应该在前台运行，以便Docker可以正确管理和监控该进程。</p><p>日志管理：<br>当Redis在前台运行时，它的输出（日志）会直接发送到标准输出（stdout）和标准错误（stderr），这使得Docker可以捕获并管理这些日志。如果Redis作为守护进程运行，这些日志可能不会被Docker捕获。</p><p>简化配置： 在Docker环境中，使用默认设置（daemonize no）可以简化配置和部署过程，因为您不需要对Redis进行特殊配置来确保它以守护进程形式运行。</p><p>xzd生产环境的redis设置daemonizeyes → no是因为：</p><p>当时的redis是源码安装的，使用systemctl管理总是无法正确加载配置文件，没法配置开机自启动，只能曲线救国，写了一个shell脚本去启动redis实例，然后使用systemctl管理这个脚本，并且设置自启动。但daemonize是yes，脚本运行一次redis就挂到后台了，systemctl认为脚本已经执行结束，所以查询脚本状态就是exit。于是设置redis为前台运行。</p><h2 id="3-创建并启动容器"><a href="#3-创建并启动容器" class="headerlink" title="3. 创建并启动容器"></a>3. 创建并启动容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd  --name  redis-new --privileged=<span class="literal">true</span> -v /data/redis/redis.conf:/data/redis/redis.conf -v /data/redis/data:/data  -p 46379:6379  redis redis-server /data/redis/redis.conf</span><br></pre></td></tr></table></figure><p>对该命令各个部分的详细解释：</p><ol><li><code>docker run</code>：这是Docker的基本命令，用来运行一个新的容器。</li><li><code>-itd</code>：这个参数实际上是三个参数的组合。<code>-i</code>（或<code>--interactive</code>）保持容器的标准输入开放，即使不附加到容器。<code>-t</code>（或<code>--tty</code><br>）为容器分配一个伪终端。<code>-d</code>（或<code>--detach</code>）表示在后台运行容器，并打印容器ID。</li><li><code>--name redis-new</code>：这个参数为您的容器指定一个名字，这里名字是<code>redis-new</code>。</li><li><code>--privileged=true</code>：这个参数给容器提供额外的权限。当设置为<code>true</code>时，容器几乎具有相同的权限作为宿主机上的进程。</li><li><code>-v /data/redis/redis.conf:/data/redis/redis.conf</code>：这是一个卷挂载命令。它将宿主机上的<code>/data/redis/redis.conf</code><br>文件挂载到容器内的<code>/data/redis/redis.conf</code>。这允许你使用自定义的Redis配置。</li><li><code>-v /data/redis/data:/data</code>：同样是一个卷挂载命令，将宿主机的<code>/data/redis/data</code>目录挂载到容器的<code>/data</code><br>目录。这通常用于持久化Redis数据。</li><li><code>-p 46379:6379</code>：这是端口映射。它将容器内部的6379端口映射到宿主机的46379端口。这意味着，当你在宿主机上访问46379端口时，实际上是在访问容器内部的6379端口。</li><li><code>redis</code>：这是要运行的Docker镜像的名称，在这个案例中是官方的Redis镜像。</li><li><code>redis-server /data/redis/redis.conf</code><br>：这是容器启动时要运行的命令。它启动Redis服务器并使用您提供的配置文件<code>/data/redis/redis.conf</code>。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell批量添加cron任务</title>
      <link href="/2024/04/17/shell%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0cron%E4%BB%BB%E5%8A%A1/"/>
      <url>/2024/04/17/shell%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0cron%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>本来想写个脚本批量创建任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">crontab -r</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 1 * * * /usr/bin/python3 /path/to/script1.py&quot;</span> | crontab -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 2 * * * /usr/bin/python3 /path/to/script2.py&quot;</span> | crontab -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 3 * * * /usr/bin/python3 /path/to/script3.py&quot;</span> | crontab -</span><br></pre></td></tr></table></figure><p>看着跟真的似的，但其实这个老逼|管道符号写的不对，运行后只有最后一个任务添加进去。<br>修改后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">crontab -r</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 1 * * * /usr/bin/python3 /path/to/your/script1.py&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 2 * * * /usr/bin/python3 /path/to/your/script2.py&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 3 * * * /usr/bin/python3 /path/to/your/script3.py&quot;</span></span><br><span class="line">&#125; | crontab -</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用crontab运行python脚本，logru日志不打印：日志路径修改为绝对路径即可。</p><p>crontab默认的日志：&#x2F;var&#x2F;log&#x2F;cron（只能看到是否执行）</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>畅捷通T+Cloud定制开发指南</title>
      <link href="/2024/04/17/%E7%95%85%E6%8D%B7%E9%80%9AT+Cloud%E5%AE%9A%E5%88%B6%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/"/>
      <url>/2024/04/17/%E7%95%85%E6%8D%B7%E9%80%9AT+Cloud%E5%AE%9A%E5%88%B6%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><blockquote><p>按顺序往下走即可</p></blockquote><h2 id="1、申请开发测试账套"><a href="#1、申请开发测试账套" class="headerlink" title="1、申请开发测试账套"></a><strong>1、申请开发测试账套</strong></h2><p>擦亮眼睛，别选错账套</p><h2 id="2、创建应用"><a href="#2、创建应用" class="headerlink" title="2、创建应用"></a><strong>2、创建应用</strong></h2><p>控制台 → 创建企业自建应用 → 对接主应用选择 <code>TPlus</code></p><h2 id="3、生成授权证书"><a href="#3、生成授权证书" class="headerlink" title="3、生成授权证书"></a><strong>3、生成授权证书</strong></h2><p>token是二开鉴权的最后一道防线，证书用于获取token，为了证明你是一个被授权的开发者。</p><p>控制台 → 选择应用 → 开发管理 → 权限管理 → 找一个管理员 → 生成授权链接 → 保存授权证书（长期有效）</p><h2 id="4、配置可信域名"><a href="#4、配置可信域名" class="headerlink" title="4、配置可信域名"></a><strong>4、配置可信域名</strong></h2><p><strong>就是怕你乱申请token搞事情，配置了可信域名后，就能从token追溯到具体的ISV和为其颁发授权证书的应用管理员。</strong></p><p>控制台 → 左侧可信域名管理 → 下载<code>CHANJET_CHECK.txt</code>文件 → 放到回调服务器的<strong>80或443端口</strong>的根路由下→ 回到消息配置页面 →<br>输入AES密钥 → 输入消息接收地址。</p><p><strong>⚠️ 一个域名只能绑定一个账套（平台会查重）</strong></p><p><strong>⚠️ 经过为期一个月的测试，绑定可信域名后，把</strong><code>CHANJET_CHECK.txt</code>修改为其他企业<br>，甚至删除掉，仍不影响回调使用，平台说不定期拨测可能是在忽悠你。</p><h2 id="5、配置回调服务器地址"><a href="#5、配置回调服务器地址" class="headerlink" title="5、配置回调服务器地址"></a><strong>5、配置回调服务器地址</strong></h2><p>控制台 → 选择企业自建应用 → 应用功能 → 消息订阅 → 消息配置</p><p>所有的回调消息，都是AES加密的，所以先<strong>配置消息秘钥</strong>（<strong>长度必须是16位</strong>）</p><p>然后配置消息接收地址（后续所有的回调，包括消息订阅，都会走这一个接口）</p><p><strong>不管给你发啥，必须在一秒内响应</strong><code>&#123;&quot;result&quot;: &quot;success&quot;&#125;</code><strong>，长时间响应异常，会被中断消息推送。</strong></p><p>被中断后，可以到消息订阅中，点击<strong>重置并发送</strong>按钮，恢复使用。或者调用”<strong>立即触发 ticket 推送</strong>“接口。</p><h2 id="6、配置服务器公网地址-（公有云不用看这条）"><a href="#6、配置服务器公网地址-（公有云不用看这条）" class="headerlink" title="6、配置服务器公网地址 （公有云不用看这条）"></a><strong>6、配置服务器公网地址 （公有云不用看这条）</strong></h2><p><strong>专属云的通信流程：你的第三方程序 → 畅捷通开放平台 → 专属云客户端</strong></p><p><strong>这个公网地址指的是客户 T+ 系统的公网地址，简单说就是把它告诉开放平台，平台才能通过公网和专属云通信。</strong></p><p>登录T+管理员账号 → 服务器配置 → 地址配置 → 测试连接，然后登录客户端到云应用里测试一下服务器网络连接。</p><h2 id="7、开通业务接口权限"><a href="#7、开通业务接口权限" class="headerlink" title="7、开通业务接口权限"></a><strong>7、开通业务接口权限</strong></h2><p>千万不要费九牛二虎之力获取到 token最后发现接口报错<code>openToken无调用该接口的权限</code>，再返回来开通。</p><p>咱直接少走十年弯路，控制台 → 自建应用 → 权限管理 → 开通对应的接口权限</p><h2 id="8、获取-app-ticket"><a href="#8、获取-app-ticket" class="headerlink" title="8、获取 app_ticket"></a><strong>8、获取 app_ticket</strong></h2><p>配置好可信域名和消息接收地址后，平台每10分钟给你推送一次ticket密文，用上述配好的密钥解密，获取ticket。每个ticket有效期30分钟。</p><p><strong>所有的回调或订阅消息，都用明文载荷中的</strong><code>msgType</code><strong>区分事件类型。</strong></p><h2 id="9、获取-open-token"><a href="#9、获取-open-token" class="headerlink" title="9、获取 open_token"></a><strong>9、获取 open_token</strong></h2><p>官方接口文档： <a href="https://open.chanjet.com/docs/file/apiFile/common/selfBuiltApp/selfBuiltAppAuth?id=32086">T+自建应用获取token接口</a></p><p>就是用自建应用信息和刚才生成的授权证书+ticket去请求token接口，获取token。</p><p>他的有效期比较牛逼：<strong>6天</strong>，可以缓存下来。</p><p>响应数据中还有一个 refreshToken, 有效期 29 天，可以用他直接刷新 token。</p><p>接口：GET  <a href="https://openapi.chanjet.com/auth/v2/refreshToken">https://openapi.chanjet.com/auth/v2/refreshToken</a></p><p>headers：appkey 和 appSecret</p><p>params：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;grantType&#x27;: &#x27;refresh_token&#x27;,</span><br><span class="line">    &#x27;refreshToken&#x27;: &#x27;xxx&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10、消息订阅"><a href="#10、消息订阅" class="headerlink" title="10、消息订阅"></a><strong>10、消息订阅</strong></h2><p>控制台 → 选择自建应用 → 应用功能 → 消息订阅 → 消息列表 → 订阅想要的事件（要记住订阅消息code） → 重新生成授权证书（否则订阅不生效）</p><p>有个bug，直接点右侧的查看消息，无法查看接口文档，需要到开放平台 API文档 → T+API → T+消息订阅 查看 😓</p><p>如果开发目标是把T+的数据同步给其他系统（如宜搭），那么只需要第一次部署上线时，调T+业务接口批量同步过来，后续T+中增加的数据，采用消息订阅即可，T+增加一条你就同步一条，避免无意义的定时任务消耗资源。</p><p>T+的消息订阅非常朴实无华：比如T+增加了一个出库单，他会通过http post你的消息接收地址，发送加密载荷，解密后根据msgType判断事件类型，比如订阅了付款单审核，msgType就是ArapPayment_Audit。载荷中带有单据标识voucherCode，然后你拿code去请求查询单据的接口，获取单据的详情… …</p><h3 id="收不到？一般专属云会这样"><a href="#收不到？一般专属云会这样" class="headerlink" title="收不到？一般专属云会这样"></a><strong>收不到？一般专属云会这样</strong></h3><p>先检查客户<code>账套版本</code>是否过低（小于16）</p><p>再检查T+的部署机器上<code>rabitmq</code>启动了没</p><p>再检查T+的部署机器上，T+服务管理APP中<code>异步任务</code>启动了没</p><h2 id="11、经典报错汇总"><a href="#11、经典报错汇总" class="headerlink" title="11、经典报错汇总"></a><strong>11、经典报错汇总</strong></h2><h3 id="专属云获取token报server-not-found"><a href="#专属云获取token报server-not-found" class="headerlink" title="专属云获取token报server not found"></a>专属云获取token报<code>server not found</code></h3><p>没有配置服务器公网地址。看第六条 。</p><h3 id="业务接口报服务名称不正确"><a href="#业务接口报服务名称不正确" class="headerlink" title="业务接口报服务名称不正确"></a>业务接口报服务名称不正确</h3><p>一查官方文档，说系统版本低要打补丁，<strong>不要被他误导</strong>，一定是你请求参数写错了。参数缺失他不报参数缺失，报打补丁的错…😓</p><h3 id="未将对象引用设置到对象的…"><a href="#未将对象引用设置到对象的…" class="headerlink" title="未将对象引用设置到对象的…"></a>未将对象引用设置到对象的…</h3><p>请求参数缺失了，类型传错了，都会这样，反正就是对方报错了 ，老毛病了😓</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: &quot;EXERROR0001&quot;,</span><br><span class="line">    &quot;message&quot;: &quot;未将对象引用设置到对象的实例，调用堆栈为   在 Ufida.T.EAP.Aop.Server.ServerDynamicProxyImpl.NormalInvoke(MethodBase method, Object[] args)\r\n   在 Ufida.T.EAP.Aop.Server.ServerDynamicProxyImpl.Invoke(IMessage message)\r\n   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&amp; msgData, Int32 type)\r\n   在 Ufida.T.BAP.Base.VoucherAPI.IVoucherAPIService.Save(DTO dto, APIParamDTO apiParam)&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;Code&quot;: &quot;EXERROR0001&quot;,</span><br><span class="line">        &quot;StatusCode&quot;: 400</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12、关于基础档案查询"><a href="#12、关于基础档案查询" class="headerlink" title="12、关于基础档案查询"></a><strong>12、关于基础档案查询</strong></h2><p>默认只返回基础字段，如 name、code，要使用 <code>SelectFields</code>来过滤字段，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;param&quot;: &#123;</span><br><span class="line">        &quot;SelectFields&quot;: &quot;ID,Code,Name,Unit.Code,Unit.Name&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>⚠️ 1、 存货查询，如传入错误字段，将导致查询结果全为空。</strong></p><p><strong>⚠️ 2、 仓库查询， SelectFields 中的字段名不区分大小写，查什么返回什么，比如：</strong></p><p>查询参数：name 可以写成 Name，也可以写成 NaMe，或者 NAME、namE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;param&quot;: &#123;</span><br><span class="line">        &quot;Selectfields&quot;: &quot;ID,Code,NaMe&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;ID&quot;: 1,</span><br><span class="line">        &quot;Code&quot;: &quot;01&quot;,</span><br><span class="line">        &quot;NaMe&quot;: &quot;成品仓&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>你甚至可以传入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;param&quot;: &#123;</span><br><span class="line">        &quot;Selectfields&quot;: &quot;ID,Code,NaMe,天王盖地虎,宝塔镇河妖&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;param&quot;: &#123;</span><br><span class="line">        &quot;Selectfields&quot;: &quot;ID,Code,NaMe,天王盖地虎,宝塔镇河妖@@@@</span><br><span class="line">        dasdad666&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;ID&quot;: 1,</span><br><span class="line">        &quot;Code&quot;: &quot;01&quot;,</span><br><span class="line">        &quot;NaMe&quot;: &quot;成品仓&quot;,</span><br><span class="line">        &quot;天王盖地虎&quot;: null,</span><br><span class="line">        &quot;宝塔镇河妖&quot;: null</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;ID&quot;: 1,</span><br><span class="line">        &quot;Code&quot;: &quot;01&quot;,</span><br><span class="line">        &quot;NaMe&quot;: &quot;成品仓&quot;,</span><br><span class="line">        &quot;天王盖地虎&quot;: null,</span><br><span class="line">        &quot;宝塔镇河妖@@@@\n        dasdad666&quot;: null</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 系统集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker升级后运行容器报错（centos7.9）</title>
      <link href="/2023/10/18/docker%E5%8D%87%E7%BA%A7%E5%90%8E%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%8A%A5%E9%94%99%EF%BC%88centos7.9%EF%BC%89/"/>
      <url>/2023/10/18/docker%E5%8D%87%E7%BA%A7%E5%90%8E%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%8A%A5%E9%94%99%EF%BC%88centos7.9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: Unknown runtime specified docker-runc</span><br></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>可能是因为从不兼容的版本升级了docker，更改&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers目录中的文件参数，把docker-runc替换为runc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -rl <span class="string">&#x27;docker-runc&#x27;</span> /var/lib/docker/containers/ | xargs sed -i <span class="string">&#x27;s/docker-runc/runc/g&#x27;</span></span><br></pre></td></tr></table></figure><p>grep -rl：递归搜索目录和子目录，只列出含有匹配的文本行的文件名，而不显示具体的匹配内容</p><p>xargs：衔接执行之前得到的值</p><p>总体意思是把&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers中含有docker-runc的文件搜索出来，更改为runc，然后重启docker、重启容器即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart [容器<span class="built_in">id</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker版本升级（centos7.9）</title>
      <link href="/2023/10/17/docker%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7%EF%BC%88centos7.9%EF%BC%89/"/>
      <url>/2023/10/17/docker%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7%EF%BC%88centos7.9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-查看已安装的文件"><a href="#1-查看已安装的文件" class="headerlink" title="1. 查看已安装的文件"></a>1. 查看已安装的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed |grep docker </span><br></pre></td></tr></table></figure><h2 id="2-删除已安装的文件"><a href="#2-删除已安装的文件" class="headerlink" title="2. 删除已安装的文件"></a>2. 删除已安装的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove xxx</span><br></pre></td></tr></table></figure><p>再次执行第一步检查是否删除成功</p><h2 id="3-安装存储库"><a href="#3-安装存储库" class="headerlink" title="3. 安装存储库"></a>3. 安装存储库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h2 id="4-添加镜像源-aliyun"><a href="#4-添加镜像源-aliyun" class="headerlink" title="4. 添加镜像源(aliyun)"></a>4. 添加镜像源(aliyun)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="5-1-下载最新版"><a href="#5-1-下载最新版" class="headerlink" title="5.1 下载最新版"></a>5.1 下载最新版</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p><code>docker-ce</code>: 这是 Docker 社区版的主要软件包，包含 Docker 的核心功能。</p><p><code>docker-ce-cli</code>: 这是 Docker 社区版的命令行界面工具，用于与 Docker 守护进程进行交互。</p><p><code>containerd.io</code>: 这是一个容器运行时，Docker 用它来管理容器的生命周期。</p><p>这个命令安装了 Docker 的全部主要组件，包括 Docker 引擎、客户端界面，以及容器运行时。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker-ce </span><br></pre></td></tr></table></figure><p>这个命令只显式地安装了 <code>docker-ce</code> 包，即 Docker 社区版的核心组件。</p><p>在许多情况下，安装 <code>docker-ce</code> 时，相关的依赖包（如 <code>docker-ce-cli</code> 和 <code>containerd.io</code>）会自动被安装。但并不可靠，特别是在特定的<br>YUM 仓库配置或包依赖性发生变化的情况下。</p><p>因此，<strong>第一个命令更加全面</strong>，它确保了 Docker 的所有主要组件都被安装。而第二个命令可能依赖于 YUM<br>的依赖性解析来安装额外的必要组件。为了确保完整的安装，通常推荐使用第一个命令</p><h2 id="5-2-下载指定版本"><a href="#5-2-下载指定版本" class="headerlink" title="5.2 下载指定版本"></a>5.2 下载指定版本</h2><p>先查看版本列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | <span class="built_in">sort</span> -r</span><br></pre></td></tr></table></figure><p>指定版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce-17.09.0.ce -y</span><br></pre></td></tr></table></figure><h2 id="6-启动"><a href="#6-启动" class="headerlink" title="6. 启动"></a>6. 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="7-查看版本"><a href="#7-查看版本" class="headerlink" title="7. 查看版本"></a>7. 查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h2 id="以下版本号有啥区别？"><a href="#以下版本号有啥区别？" class="headerlink" title="以下版本号有啥区别？"></a>以下版本号有啥区别？</h2><p><code>Docker version 1.13.1, build 7d71120/1.13.1</code>（直接yum安装的）</p><p><code>Docker version 24.0.7, build afdd53b</code></p><ol><li><p><strong>Docker 1.13.1</strong>：这是 Docker 较早期的一个版本，发布于 2017<br>年左右。这个版本号遵循着传统的主版本号.次版本号.修订号的格式。在这个版本中，主版本号是 <code>1</code>，次版本号是 <code>13</code><br>，修订号是 <code>1</code>。<code>build 7d71120/1.13.1</code> 表明这个构建的具体提交 ID 是 <code>7d71120</code>。</p></li><li><p><strong>Docker 24.0.7</strong>：这个版本号代表了 Docker 的较新版本，其版本命名方式在 Docker 17.03 版本后发生了变化。从 2017<br>年开始，Docker 采用年份和月份的方式来标记版本，比如 <code>17.03</code> 表示 2017 年 3 月的版本。但在您提供的版本号中，<code>24.0.7</code><br>似乎并不遵循这个规则，可能是 Docker 又一次调整了版本命名策略，或者这是一个特定的企业版或定制版 Docker<br>的版本号。<code>build afdd53b</code> 同样表示这个版本的构建 ID。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask软删除方案</title>
      <link href="/2023/07/13/flask%E8%BD%AF%E5%88%A0%E9%99%A4%E6%96%B9%E6%A1%88/"/>
      <url>/2023/07/13/flask%E8%BD%AF%E5%88%A0%E9%99%A4%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="flask软删除方案"><a href="#flask软删除方案" class="headerlink" title="flask软删除方案"></a>flask软删除方案</h2><p>在模型和表中加入了软删除标识字段 <code>is_delete</code>，为了实现查询时过滤掉已删除数据，需要在每一个query后手写filter参数(is_delete&#x3D;0)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pagination = DemoModel.query.filter_by(is_delete=<span class="number">0</span>).paginate(page=<span class="number">1</span>, per_page=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>为了避免重复的显式的过滤查询，可以继承改写<code>BaseQuery</code>基类，将<code>is_delete</code>的过滤操作放在底层，实现预过滤。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> BaseQuery</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QueryWithSoftDelete</span>(<span class="title class_ inherited__">BaseQuery</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        obj = <span class="built_in">super</span>(QueryWithSoftDelete, cls).__new__(cls)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(args) &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">super</span>(QueryWithSoftDelete, obj).__init__(*args, **kwargs)</span><br><span class="line">            <span class="keyword">return</span> obj.filter_by(is_delete=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> obj</span><br></pre></td></tr></table></figure><blockquote><p>(这个<code>BaseQuery</code>并不是从<code>sqlalchemy</code>导入的，而是<code>flask_sqlalchemy</code>….)</p></blockquote><p>然后每一个模型都添加<code>query_class = QueryWithSoftDelete</code>，表示这个model的查询基类使用<code>QueryWithSoftDelete</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> custom.models.custom_query <span class="keyword">import</span> QueryWithSoftDelete</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DemoModel</span>(db.Model):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;demo&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">    query_class = QueryWithSoftDelete</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">soft_delete</span>(<span class="params">self</span>):</span><br><span class="line">        self.is_delete = time.time()</span><br><span class="line">        <span class="keyword">return</span> self.is_delete</span><br></pre></td></tr></table></figure><p><code>soft_delete</code>方法用于软删除，将<code>is_delete</code>字段设置为当前时间戳，表示删除时间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj = DemoModel.query.filter_by(obj_uuid=<span class="number">1</span>).first()</span><br><span class="line">obj.soft_delete()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongo投影</title>
      <link href="/2023/04/29/mongo%E6%8A%95%E5%BD%B1/"/>
      <url>/2023/04/29/mongo%E6%8A%95%E5%BD%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="投影（Projection）"><a href="#投影（Projection）" class="headerlink" title="投影（Projection）"></a>投影（Projection）</h2><p>在 MongoDB 中，查询操作中的投影（Projection）可以控制返回结果中包含的字段。通过使用投影控制返回字段，从而减少数据传输和处理的开销。</p><p>在编写查询语句时，投影的写法有以下几点讲究：</p><ol><li><strong>指定包含的字段或排除的字段：</strong> 可以使用 1 表示要包含该字段，使用 0 表示要排除该字段。在投影中指定要返回的字段，可以减少返回结果的数据量，提高查询性能。</li><li><strong>使用下划线 _id：</strong> 默认情况下，MongoDB 在每个文档中都会有一个名为 _id 的字段，它唯一标识了该文档。在投影中，如果不想返回 _id 字段，可以将其设置为 0。</li></ol><p>以下是一些投影的常见写法示例：</p><ul><li>返回指定字段，排除其他字段：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">projection = &#123;</span><br><span class="line">    <span class="string">&quot;field1&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;field2&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>排除指定字段，返回其他字段：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">projection = &#123;</span><br><span class="line">    <span class="string">&quot;field1&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;field2&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;field3&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回所有字段（默认情况，可以省略投影）：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">projection = &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>返回除指定字段外的所有字段：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">projection = &#123;</span><br><span class="line">    <span class="string">&quot;excluded_field&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mongo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker容器自启动</title>
      <link href="/2022/09/11/docker%E5%AE%B9%E5%99%A8%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
      <url>/2022/09/11/docker%E5%AE%B9%E5%99%A8%E8%87%AA%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>先查看是否已经设置了自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器ID</span><br></pre></td></tr></table></figure><p>在输出中，找到 “RestartPolicy” ，它会显示容器的重启策略。如果值是 “always”，那么说明该容器已设置为开机自启。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;RestartPolicy&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;MaximumRetryCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>设置为always</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker update --restart=always [容器名称或ID]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>累积权重抽样demo及方案分析</title>
      <link href="/2022/06/18/%E7%B4%AF%E7%A7%AF%E6%9D%83%E9%87%8D%E6%8A%BD%E6%A0%B7demo%E5%8F%8A%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90/"/>
      <url>/2022/06/18/%E7%B4%AF%E7%A7%AF%E6%9D%83%E9%87%8D%E6%8A%BD%E6%A0%B7demo%E5%8F%8A%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 2021-12-18 19:00:00</span></span><br><span class="line"><span class="comment"># @Author : wangkaiyu</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">channel_choose</span>(<span class="params">channel_weights</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> channel_weights:</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 累积权重列表</span></span><br><span class="line">    cumulative_weights = []</span><br><span class="line">    total_weight = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> channel_weights:</span><br><span class="line">        weight = item.get(<span class="string">&quot;weight&quot;</span>, <span class="number">0</span>)</span><br><span class="line">        total_weight += weight</span><br><span class="line">        cumulative_weights.append(total_weight)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果所有渠道的权重和为0，返回第一个渠道数据</span></span><br><span class="line">    <span class="keyword">if</span> total_weight == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> channel_weights[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 生成一个0到总权重的随机数</span></span><br><span class="line">    rand_val = random.random() * total_weight</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查找随机数所在的权重范围</span></span><br><span class="line">    <span class="keyword">for</span> index, cum_weight <span class="keyword">in</span> <span class="built_in">enumerate</span>(cumulative_weights):</span><br><span class="line">        <span class="keyword">if</span> rand_val &lt; cum_weight:</span><br><span class="line">            <span class="keyword">return</span> channel_weights[index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    data = [&#123;<span class="string">&quot;weight&quot;</span>: <span class="number">100</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;DDOS&quot;</span>&#125;, &#123;<span class="string">&quot;weight&quot;</span>: <span class="number">50000</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;WAF&quot;</span>&#125;]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;抽样结果：&quot;</span>, channel_choose(data))</span><br><span class="line">    end_time = time.time()</span><br><span class="line">    total_time = end_time - start_time</span><br><span class="line">    total_time_s = <span class="built_in">format</span>(total_time, <span class="string">&#x27;.10f&#x27;</span>)</span><br><span class="line">    total_time_ms = <span class="built_in">format</span>(total_time * <span class="number">1000</span>, <span class="string">&#x27;.2f&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;运行时间：<span class="subst">&#123;total_time_s&#125;</span>s   --&gt;  <span class="subst">&#123;total_time_ms&#125;</span>ms&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><p>为了更好地理解这个方法，先看一个简化的例子。假设我们有3个渠道，权重分别为<code>3</code>, <code>2</code>, 和<code>5</code>。如果我们将这些权重绘制到一条直线上，可以想象成这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| ---A - -- | ---B - -- | ----------C - --------- |</span><br></pre></td></tr></table></figure><p>其中，<code>A</code>代表第一个渠道，它占3个单位长度；<code>B</code>代表第二个，它占2个单位；<code>C</code><br>代表第三个，它占5个单位。整条线的总长度是<code>3 + 2 + 5 = 10</code>。</p><p>当我们在这条长度为10的线上随机选择一个点，落在<code>A</code>、<code>B</code>、或<code>C</code>的区间内的概率分别为<code>3/10</code>、<code>2/10</code>、和<code>5/10</code>，这与它们的权重是一致的。</p><p>现在，我们不必真的画这样的线，而是使用一个叫做“累积权重”的列表来代替。</p><p>对于我们的例子，累积权重列表是这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><h3 id="如何计算的？"><a href="#如何计算的？" class="headerlink" title="如何计算的？"></a>如何计算的？</h3><ul><li>第一个数是第一个渠道的权重：3</li><li>第二个数是前两个渠道权重的和：3 + 2 &#x3D; 5</li><li>第三个数是所有渠道权重的和：3 + 2 + 5 &#x3D; 10</li></ul><p>当我们产生一个<code>0~10</code>之间的随机数：</p><ul><li>如果这个数小于3，我们选择<code>A</code>。</li><li>如果这个数小于5但大于或等于3，我们选择<code>B</code>。</li><li>如果这个数小于10但大于或等于5，我们选择<code>C</code>。</li></ul><p>这样就模拟了基于权重的随机选择，而没有必要创建一个巨大的unwind_list。</p><h2 id="代码逻辑："><a href="#代码逻辑：" class="headerlink" title="代码逻辑："></a>代码逻辑：</h2><ol><li>初始化<code>cumulative_weights</code>为空列表和<code>total_weight</code>为0。</li><li>遍历<code>channel_weights</code>，对每个渠道，将其权重加到<code>total_weight</code>，然后将<code>total_weight</code>添加到<code>cumulative_weights</code>。</li><li>产生一个<code>0~total_weight</code>之间的随机数。</li><li>查找这个随机数属于哪个渠道的范围，并返回那个渠道。</li></ol><p>这种方法更加高效，因为不需要为每个渠道按其权重数创建多个条目，而只需要做一些简单的数学计算和查找操作。</p><h2 id="如何生成一个0-最大权重之间的随机数？"><a href="#如何生成一个0-最大权重之间的随机数？" class="headerlink" title="如何生成一个0~最大权重之间的随机数？"></a>如何生成一个0~最大权重之间的随机数？</h2><p>在Python中，<code>random.random()</code>会返回一个在[0, 1)范围内的浮点数。也就是说，它会返回一个大于或等于0且小于1的随机数。</p><p>为了得到一个在[0, <code>total_weight</code>)范围内的随机数，我们可以简单地将<code>random.random()</code>的结果乘以<code>total_weight</code>。</p><p>让我们用一个简单的例子来解释：</p><p>假设<code>total_weight</code>为10，那么<code>random.random()</code>可能会返回如下一些值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.123</span>, <span class="number">0.456</span>, <span class="number">0.789</span>, ...</span><br></pre></td></tr></table></figure><p>当我们将这些值乘以<code>total_weight</code>（即10）时，得到的是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.23</span>, <span class="number">4.56</span>, <span class="number">7.89</span>, ...</span><br></pre></td></tr></table></figure><p>这样，我们就得到了一个在[0, 10)范围内的随机浮点数。</p><p>在上面提到的<code>channel_choose</code>函数中，这一步是这样实现的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rand_val = random.random() * total_weight</span><br></pre></td></tr></table></figure><p>这里，<code>rand_val</code>就是一个在[0, <code>total_weight</code>)范围内的随机数。</p><h2 id="为什么要使用random-random-总权重，而不是直接取0到总权重之间的随机数呢？"><a href="#为什么要使用random-random-总权重，而不是直接取0到总权重之间的随机数呢？" class="headerlink" title="为什么要使用random.random()*总权重，而不是直接取0到总权重之间的随机数呢？"></a>为什么要使用random.random()*总权重，而不是直接取0到总权重之间的随机数呢？</h2><p>在原始代码中，使用了一个展开的列表(<code>unwind_list</code>)</p><p>所以使用<code>random.randint(0, int(total_weight) - 1)</code>是合适的，因为是在一个整数索引范围内选择。这意味着，如果总权重为10，那么你会随机选择一个整数，范围从0到9。</p><p>但在基于累积权重的方法中，我们没有展开的列表。我们的目标是直接在权重的连续范围内选择。使用<code>random.random() * total_weight</code><br>的原因在于我们想获取一个连续的数值范围而不仅仅是整数。这使得我们可以更平滑地处理权重，尤其是当权重不是整数时。</p><p>举个例子，假设有两个渠道，权重分别是1.5和2.5，那么总权重是4。如果我们只随机选择一个整数，我们只能在0、1、2、3之中选择，这就不够精确，可能会导致某些渠道被过度选择或者被忽略。</p><p>但如果我们使用<code>random.random() * total_weight</code>，我们会得到一个从0到4之间的浮点数（如1.23、2.78等），这样就可以更精确地反映权重。</p><p>当然，如果确保你的权重始终是整数，并且想继续使用整数随机数，那么使用<code>random.randint(0, total_weight - 1)</code>也是可以的。但使用<code>random.random() * total_weight</code>提供了更大的灵活性，并且可以更准确地处理不同的权重情况。</p><h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h3 id="什么情况下权重数会变得很大？"><a href="#什么情况下权重数会变得很大？" class="headerlink" title="什么情况下权重数会变得很大？"></a>什么情况下权重数会变得很大？</h3><ol><li><strong>大数据集</strong>：例如，当处理一个大型的广告平台或内容推荐系统时，可能有数百万的项目，每个项目都有自己的权重。</li><li><strong>高精度权重</strong>：在某些应用中，为了实现高精确度的权重分配，权重可能会被设置为非常大的数值。例如，代替使用0.1和0.9作为权重，可能会使用100和900以获得更好的控制。</li><li><strong>权重的累计或叠加</strong>：在某些情况下，权重可能会基于各种标准或指标进行累加或乘法叠加。随着时间的推移，这可能导致非常大的权重。</li><li><strong>自然增长</strong>：例如，在某些系统中，项目可能基于其存在的时间或其受欢迎程度获得更多的权重。随着时间的推移，这些权重可能会不断增长。</li><li><strong>人为设置</strong>：在某些应用中，为了使某些项目具有更高的优先级或可见性，管理员或用户可能会人为地设置非常大的权重。</li><li><strong>缺乏归一化或规范化</strong>：在某些情况下，权重可能没有经过适当的归一化或规范化处理，导致其值远大于预期。</li></ol><p>对于任何具有权重的系统或应用，定期审查和管理权重是很重要的，以确保权重的分配仍然合理并符合预期的目的。如果发现权重变得太大，可能需要考虑重新调整、归一化或使用其他技术来管理这些权重。</p><h3 id="和上一篇展开式实现方案的差异"><a href="#和上一篇展开式实现方案的差异" class="headerlink" title="和上一篇展开式实现方案的差异"></a>和上一篇展开式实现方案的差异</h3><p>这两种实现方案，目的都是根据权重对一组数据进行随机抽样。</p><ol><li><strong>展开抽样</strong>：使用”展开”的方法，也就是根据每个渠道的权重在<code>unwind_list</code>中重复该渠道。权重大的渠道在<code>unwind_list</code><br>中出现的次数更多，因此被随机选择的概率更大。</li><li><strong>累积权重抽样</strong><br>：通过使用累积权重和一个连续范围内的随机数来确定应选择哪个渠道。这种方式避免了创建一个可能非常大的<code>unwind_list</code><br>，尤其是当权重非常大时。</li></ol><p>但不论哪种方式，核心思想都是：<em><strong>确保每个渠道被选中的概率与其权重成正比。</strong></em></p><h2 id="CDF累积分布函数"><a href="#CDF累积分布函数" class="headerlink" title="CDF累积分布函数"></a>CDF累积分布函数</h2><p>基于累积权重进行随机选择，通常被称为累积分布函数（CDF, Cumulative Distribution Function）的随机抽样方法。</p><p>在统计学中，CDF描述了一个实数随机变量的概率分布。对于离散随机变量（如本例中的渠道），CDF表示值小于或等于某个给定值的概率。通过使用累积权重列表和随机抽样，我们实际上是从离散的CDF中进行抽样。</p><p>因此，这种方案可以称之为<code>基于CDF的权重随机抽样算法</code>或简称<code>CDF随机抽样</code>。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加权随机抽样demo及方案分析</title>
      <link href="/2022/06/17/%E5%8A%A0%E6%9D%83%E9%9A%8F%E6%9C%BA%E6%8A%BD%E6%A0%B7demo%E5%8F%8A%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90/"/>
      <url>/2022/06/17/%E5%8A%A0%E6%9D%83%E9%9A%8F%E6%9C%BA%E6%8A%BD%E6%A0%B7demo%E5%8F%8A%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 2021-12-17 18:00:00</span></span><br><span class="line"><span class="comment"># @Author : wangkaiyu</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">channel_choose</span>(<span class="params">channel_weights</span>):</span><br><span class="line">    <span class="comment"># 初始化总权重</span></span><br><span class="line">    total_weight = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 用于按权重展开数据</span></span><br><span class="line">    unwind_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> channel_weights:</span><br><span class="line">        <span class="comment"># 获取当前渠道的权重，如果没有指定权重，默认为0</span></span><br><span class="line">        weight = <span class="built_in">int</span>(item.get(<span class="string">&quot;weight&quot;</span>, <span class="number">0</span>))</span><br><span class="line">        total_weight += weight</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(weight):</span><br><span class="line">            unwind_list.append(item)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> total_weight == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> channel_weights[<span class="number">0</span>] <span class="keyword">if</span> channel_weights <span class="keyword">else</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在0到总权重-1之间生成一个随机整数</span></span><br><span class="line">    ran_weight = random.randint(<span class="number">0</span>, <span class="built_in">int</span>(total_weight) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算unwind_list中每个数据的出现次数</span></span><br><span class="line">    data_count = Counter(item[<span class="string">&#x27;content&#x27;</span>] <span class="keyword">for</span> item <span class="keyword">in</span> unwind_list)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Data Count:&quot;</span>, data_count)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回unwind_list中对应随机权重的渠道</span></span><br><span class="line">    <span class="keyword">return</span> unwind_list[<span class="built_in">int</span>(ran_weight)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    data = [&#123;<span class="string">&quot;weight&quot;</span>: <span class="number">100</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;DDOS&quot;</span>&#125;, &#123;<span class="string">&quot;weight&quot;</span>: <span class="number">50000</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;WAF&quot;</span>&#125;]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;抽样结果：&quot;</span>, channel_choose(data))</span><br><span class="line">    end_time = time.time()</span><br><span class="line">    total_time = end_time - start_time</span><br><span class="line">    total_time_s = <span class="built_in">format</span>(total_time, <span class="string">&#x27;.10f&#x27;</span>)</span><br><span class="line">    total_time_ms = <span class="built_in">format</span>(total_time * <span class="number">1000</span>, <span class="string">&#x27;.2f&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;运行时间：<span class="subst">&#123;total_time_s&#125;</span>s   --&gt;  <span class="subst">&#123;total_time_ms&#125;</span>ms&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>使用“展开”的方法来实现基于权重的随机选择。具体来说，它首先将每个渠道按其权重数“复制”到一个新的列表中，然后从这个“展开”列表中随机选择一个元素。这样，权重较大的渠道在列表中出现的次数就越多，因此被选中的概率也越大。</p><p>详细工作步骤：</p><ol><li>初始化：<ul><li><code>total_weight</code>为2（但这可能是一个错误，应该初始化为0）。</li><li><code>unwind_list</code>为空列表。</li></ul></li><li>对<code>channel_weights</code>中的每个渠道执行以下操作：<ul><li>获取该渠道的权重；如果未定义权重，则默认为0。</li><li>将当前的权重累加到<code>total_weight</code>。</li><li>根据当前渠道的权重，将这个渠道多次（等于其权重）添加到<code>unwind_list</code>。</li></ul></li><li>判断<code>total_weight</code>是否为0：<ul><li>如果为0，这可能意味着配置存在问题。在这种情况下，代码直接返回<code>channel_weights</code>中的第一个渠道或空字典（如果列表为空）。</li></ul></li><li>生成一个介于0到<code>total_weight-1</code>的随机整数<code>ran_weight</code>。</li><li>返回<code>unwind_list</code>列表中索引为<code>ran_weight</code>的元素。</li></ol><h2 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h2><p>假设有两个渠道，权重分别为2和3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channel_weights = [&#123;<span class="string">&quot;weight&quot;</span>: <span class="number">2</span>, <span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>&#125;, &#123;<span class="string">&quot;weight&quot;</span>: <span class="number">3</span>, <span class="string">&quot;type&quot;</span>: <span class="string">&quot;B&quot;</span>&#125;]</span><br></pre></td></tr></table></figure><p>unwind_list将会是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[A, A, B, B, B]</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>需要注意的是，对于非常大的权重，这种方法可能会占用大量内存，因为它需要创建一个“展开”列表。在实际应用中，可能需要其他更高效的方法来实现基于权重的随机选择。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python中的正则表达式</title>
      <link href="/2022/01/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2022/01/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>正则表达式是一个处理字符串的工具。python内置的正则的模块叫做re</p><ul><li>匹配操作：re.match() 和 re.search()</li><li>检索所有匹配结果：re.findall() 和 re.finditer()</li><li>字符串分割：re.split()</li><li>字符串替换：re.sub() 和 re.subn()</li><li>正则表达式对象：re.compile()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配操作 match是从开头匹配，search是从任意位置匹配（使用场景不同）</span></span><br><span class="line"><span class="comment"># 注意：二者与正则表达式中的贪婪匹配没有直接关系 贪婪匹配是指在匹配时会尽可能多地匹配字符</span></span><br><span class="line">result = re.<span class="keyword">match</span>(pattern, string)</span><br><span class="line">result = re.search(pattern, string)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则表达式对象</span></span><br><span class="line">pattern_obj = re.<span class="built_in">compile</span>(pattern)</span><br><span class="line">result = pattern_obj.search(string)</span><br></pre></td></tr></table></figure><p>检索所有匹配结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># findall在指定字符串中查找匹配某个正则表达式的所有子串，并以列表形式返回这些子串</span></span><br><span class="line"><span class="comment"># finditer返回一个包含了所有匹配对象的迭代器 </span></span><br><span class="line"><span class="comment"># 可遍历这个迭代器获取每个匹配对象，然后用group获取匹配对象中的具体子串</span></span><br><span class="line">result = re.findall(pattern, string)</span><br><span class="line">result = re.finditer(pattern, string)</span><br></pre></td></tr></table></figure><p>分割</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串分割</span></span><br><span class="line">result = re.split(pattern, string)</span><br></pre></td></tr></table></figure><p>替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">sub用于替换字符串中与正则表达式匹配的子串,它并不会改变原始字符串，而是返回一个进行替换操作之后的新字符串</span></span><br><span class="line"><span class="string">基本语法为 re.sub(pattern, repl, string, count=0, flags=0)</span></span><br><span class="line"><span class="string">pattern: 要匹配的正则表达式模式。</span></span><br><span class="line"><span class="string">repl: 要替换匹配的子串的字符串。</span></span><br><span class="line"><span class="string">string: 要进行匹配和替换的原始字符串。</span></span><br><span class="line"><span class="string">count: 最多进行多少处替换操作，默认为 0，表示进行所有匹配的替换。</span></span><br><span class="line"><span class="string">flags: 可选的标志参数。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">result = re.sub(pattern, replace, string)</span><br><span class="line">result = re.subn(pattern, replace, string)</span><br><span class="line"></span><br><span class="line"><span class="comment"># demo</span></span><br><span class="line">string = <span class="string">&quot;Hello, world. How are you today?&quot;</span></span><br><span class="line">new_string = re.sub(<span class="string">r&#x27;\.&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, string)</span><br><span class="line"><span class="built_in">print</span>(new_string)</span><br><span class="line"><span class="comment"># 输出： Hello, world! How are you today?</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES聚合查询</title>
      <link href="/2021/12/06/ES%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2/"/>
      <url>/2021/12/06/ES%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<p>聚合框架有助于根据搜索查询提供聚合数据。聚合查询是数据库中重要的功能特性，ES作为搜索引擎兼数据库，同样提供了强大的聚合分析能力。它基于查询条件来对数据进行分桶、计算的方法。有点类似于 SQL 中的 group by 再加一些函数方法的操作。聚合可以嵌套，由此可以组成复杂的操作。</p><p>聚合计算的值可以取<strong>字段的值</strong>，也可是<strong>脚本计算的结果</strong>。查询请求体中以aggregations节点的<strong>语法定义</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>                        <span class="comment">//也可简写为 aggs</span></span><br><span class="line">    <span class="attr">&quot;&lt;aggregation_name&gt;&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>      <span class="comment">//聚合的名字</span></span><br><span class="line">        <span class="attr">&quot;&lt;aggregation_type&gt;&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>     <span class="comment">//聚合的类型</span></span><br><span class="line">            &lt;aggregation_body&gt;      <span class="comment">//聚合体：对哪些字段进行聚合</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">[</span><span class="punctuation">,</span><span class="attr">&quot;meta&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="punctuation">[</span>&lt;meta_data_body&gt;<span class="punctuation">]</span> <span class="punctuation">&#125;</span> <span class="punctuation">]</span>?                 <span class="comment">//元</span></span><br><span class="line">        <span class="punctuation">[</span><span class="punctuation">,</span><span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="punctuation">[</span>&lt;sub_aggregation&gt;<span class="punctuation">]</span>+ <span class="punctuation">&#125;</span> <span class="punctuation">]</span>?   <span class="comment">//在聚合里面在定义子聚合</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">,</span><span class="attr">&quot;&lt;aggregation_name_2&gt;&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> ... <span class="punctuation">&#125;</span> <span class="punctuation">]</span>*                      <span class="comment">//聚合的名字</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="1-指标聚合"><a href="#1-指标聚合" class="headerlink" title="1. 指标聚合"></a>1. 指标聚合</h1><blockquote><p>它是对文档进行一些权值计算（比如求所有文档某个字段求最大、最小、和、平均值），输出结果往往是文档的权值，相当于为文档添加了一些统计信息。</p><p>它基于特定字段（field）或脚本值（generated using scripts），计算聚合中文档的数值权值。数值权值聚合（注意分类只针对数值权值聚合，非数值的无此分类）输出单个权值的，也叫 single-value numeric metrics，其它生成多个权值（比如：stats）的被叫做 multi-value numeric metrics。</p></blockquote><h2 id="1-1-max-min-sum-avg"><a href="#1-1-max-min-sum-avg" class="headerlink" title="1.1 max min sum avg"></a>1.1 max min sum avg</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-max-aggregation.html">Max Aggregation</a>，求最大值。基于文档的某个值（可以是特定的数值型字段，也可以通过脚本计算而来），计算该值在聚合文档中的均值。</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=0</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;max_price&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;price&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;took&quot;</span><span class="punctuation">:</span> <span class="number">2080</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timed_out&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skipped&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;max_score&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;max_price&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">200.0</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-min-aggregation.html">Min Aggregation</a>，求最小值。同上</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=0</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;min_price&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;price&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;min_price&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;price&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-sum-aggregation.html">Sum Aggregation</a>，求和。同上</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=0</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;min_price&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;price&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;constant_score&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hat&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;hat_prices&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;sum&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;price&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-avg-aggregation.html">Avg Aggregation</a>，求平均数。同上</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /exams/_search?size=<span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;avg_grade&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;grade&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><hr><h2 id="1-2-值统计"><a href="#1-2-值统计" class="headerlink" title="1.2 值统计"></a>1.2 值统计</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-valuecount-aggregation.html">Value Count Aggregation</a>，值计数聚合。计算聚合文档中某个值（可以是特定的数值型字段，也可以通过脚本计算而来）的个数。该聚合一般域其它 single-value <strong>聚合联合使用</strong>，比如在计算一个字段的平均值的时候，可能还会关注这个平均值是由多少个值计算而来。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;value_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1000</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="1-3-distinct-聚合"><a href="#1-3-distinct-聚合" class="headerlink" title="1.3 distinct 聚合"></a>1.3 distinct 聚合</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-cardinality-aggregation.html">Cardinality Aggregation</a>，基数聚合。它属于multi-value，基于文档的某个值（可以是特定的字段，也可以通过脚本计算而来），计算文档非重复的个数（去重计数），相当于sql中的distinct。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;cardinality&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;state_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;cardinality&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;state.keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;state_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">51</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age_count&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">21</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="1-3-统计聚合"><a href="#1-3-统计聚合" class="headerlink" title="1.3 统计聚合"></a>1.3 统计聚合</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-stats-aggregation.html">Stats Aggregation</a>，统计聚合。它属于multi-value，基于文档的某个值（可以是特定的数值型字段，也可以通过脚本计算而来），计算出一些统计信息（min、max、sum、count、avg5个值）。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_stats&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;stats&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_stats&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="number">30.171</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum&quot;</span><span class="punctuation">:</span> <span class="number">30171</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="1-4-百分比查询"><a href="#1-4-百分比查询" class="headerlink" title="1.4 百分比查询"></a>1.4 百分比查询</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-percentile-aggregation.html">tiles Aggregation</a>，百分比聚合。它属于multi-value，对指定字段（脚本）的值按从小到大累计每个值对应的文档数的占比（占所有命中文档数的百分比），返回指定占比比例对应的值。默认返回[ 1, 5, 25, 50, 75, 95, 99 ]分位上的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=0</span><br><span class="line">&#123;undefined</span><br><span class="line">  &quot;aggs&quot;: &#123;undefined</span><br><span class="line">    &quot;age_percents&quot;: &#123;undefined</span><br><span class="line">      &quot;percentiles&quot;: &#123;undefined</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;//返回</span><br><span class="line">    ...</span><br><span class="line">  &quot;aggregations&quot;: &#123;undefined</span><br><span class="line">    &quot;age_percents&quot;: &#123;undefined</span><br><span class="line">      &quot;values&quot;: &#123;undefined</span><br><span class="line">        &quot;1.0&quot;: 20,</span><br><span class="line">        &quot;5.0&quot;: 21,</span><br><span class="line">        &quot;25.0&quot;: 25,</span><br><span class="line">        &quot;50.0&quot;: 31,   //占比为50%的文档的age值 &lt;= 31，或反过来：age&lt;=31的文档数占总命中文档数的50%</span><br><span class="line">        &quot;75.0&quot;: 35.00000000000001,</span><br><span class="line">        &quot;95.0&quot;: 39,</span><br><span class="line">        &quot;99.0&quot;: 40</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h2 id="1-5-Top-Hits"><a href="#1-5-Top-Hits" class="headerlink" title="1.5 Top Hits"></a>1.5 Top Hits</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-metrics-top-hits-aggregation.html">Top Hits Aggregation</a>，最高匹配权值聚合。获取到每组前n条数据，相当于sql 中Top（group by 后取出前n条）。它跟踪聚合中相关性最高的文档，该聚合一般用做 sub-aggregation，以此来聚合每个桶中的最高匹配的文档，较为常用的统计。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ggregation，以此来聚合每个桶中的最高匹配的文档，较为常用的统计。</span><br><span class="line"></span><br><span class="line">GET index/type/_search?search_type=count</span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;all_interests&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zxw_id&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;top_tag_hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;top_hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">1</span>    <span class="comment">//返回的最大文档个数（default 3）</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><hr><h1 id="2-桶聚合"><a href="#2-桶聚合" class="headerlink" title="2. 桶聚合"></a>2. 桶聚合</h1><blockquote><p>Bucket Aggregations，桶聚合。</p><p>它执行的是对文档分组的操作（与sql中的group by类似），把满足相关特性的文档分到一个桶里，即桶分，输出结果往往是一个个包含多个文档的桶（一个桶就是一个group）。</p><p>它有一个关键字（field、script），以及一些桶分（分组）的判断条件。执行聚合操作时候，文档会判断每一个分组条件，如果满足某个，该文档就会被分为该组（fall in）。</p><p>它不进行权值的计算，他们对文档根据聚合请求中提供的判断条件（比如：{“from”:0,  “to”:100}）来进行分组（桶分）。桶聚合还会额外返回每一个桶内文档的个数。</p><p>它可以包含子聚合——sub-aggregations（权值聚合不能包含子聚合，可以作为子聚合），子聚合操作将会应用到由父聚合产生的每一个桶上。</p><p>它根据聚合条件，可以只定义输出一个桶；也可以输出多个（multi-bucket）；还可以在根据聚合条件动态确定桶个数（比如：terms aggregation）。</p></blockquote><h2 id="2-1-Terms-Aggregation"><a href="#2-1-Terms-Aggregation" class="headerlink" title="2.1 Terms Aggregation"></a>2.1 Terms Aggregation</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-bucket-terms-aggregation.html">Terms Aggregation</a>，词聚合。基于某个field，该 field 内的每一个【唯一词元】为一个桶，并计算每个桶内文档个数。默认返回顺序是按照文档个数多少排序。它属于multi-bucket。当不返回所有 buckets 的情况（它size控制），文档个数可能不准确。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;age_terms&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;terms&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">              <span class="attr">&quot;field&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;size&quot;</span> <span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span>                              <span class="comment">//size用来定义需要返回多个 buckets（防止太多），默认会全部返回。</span></span><br><span class="line">              <span class="attr">&quot;order&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;_count&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;asc&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span>  <span class="comment">//根据文档计数排序，根据分组值排序（&#123; &quot;_key&quot; : &quot;asc&quot; &#125;）</span></span><br><span class="line">              <span class="attr">&quot;min_doc_count&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span>            <span class="comment">//只返回文档个数不小于该值的 buckets</span></span><br><span class="line">              <span class="attr">&quot;include&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;.*sport.*&quot;</span><span class="punctuation">,</span>            <span class="comment">//包含过滤</span></span><br><span class="line">              <span class="attr">&quot;exclude&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;water_.*&quot;</span><span class="punctuation">,</span>          <span class="comment">//排除过滤</span></span><br><span class="line">              <span class="attr">&quot;missing&quot;</span><span class="punctuation">:</span> <span class="string">&quot;N/A&quot;</span> </span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;shard_size&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span> <span class="comment">//指定每个分片返回多少个分组，默认值（索引只有一个分片：= size，多分片：= size * 1.5 + 10）</span></span><br><span class="line">        <span class="attr">&quot;show_term_doc_count_error&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>      <span class="comment">//每个分组上显示偏差值</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">    <span class="attr">&quot;age_terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">//文档计数的最大偏差值</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span><span class="punctuation">:</span> <span class="number">463</span><span class="punctuation">,</span>           <span class="comment">//未返回的其他项的文档数</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="comment">//默认情况下返回按文档计数从高到低的前10个分组</span></span><br><span class="line">        <span class="punctuation">&#123;</span> </span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span>              <span class="comment">//年龄为31的文档有61个</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">61</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span> </span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span>            <span class="comment">//年龄为39的文档有60个</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">60</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span> </span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">49</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="2-2-filter-Aggregation"><a href="#2-2-filter-Aggregation" class="headerlink" title="2.2 filter Aggregation"></a>2.2 filter Aggregation</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-bucket-filter-aggregation.html">Filter Aggregation</a>，过滤聚合。基于一个条件，来对当前的文档进行过滤的聚合。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span><span class="string">&quot;F&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;avg_age&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">493</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;avg_age&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">30.3184584178499</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="2-3-Filters-Aggregation"><a href="#2-3-Filters-Aggregation" class="headerlink" title="2.3 Filters Aggregation"></a>2.3 Filters Aggregation</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-bucket-filters-aggregation.html">Filters Aggregation</a>，多过滤聚合。基于多个过滤条件，来对当前文档进行【过滤】的聚合，每个过滤都包含所有满足它的文档（多个bucket中可能重复），先过滤再聚合。它属于multi-bucket。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">GET logs/_search</span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;filters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// 配置过滤条件，支持 HASH 或 数组格式</span></span><br><span class="line">        <span class="attr">&quot;filters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">              <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;error&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;warnings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">              <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;warning&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;warnings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="2-4-范围聚合"><a href="#2-4-范围聚合" class="headerlink" title="2.4 范围聚合"></a>2.4 范围聚合</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-bucket-range-aggregation.html">Range Aggregation</a>，范围分组聚合。基于某个值（可以是 field 或 script），以【字段范围】来桶分聚合。范围聚合包括 from 值，不包括 to 值（区间前闭后开）。它属于multi-bucket。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">tion，范围分组聚合。基于某个值（可以是 field 或 script），以【字段范围】来桶分聚合。范围聚合包括 from 值，不包括 to 值（区间前闭后开）。它属于multi-bucket。</span><br><span class="line"></span><br><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ranges&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">//配置区间</span></span><br><span class="line">          <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="number">25</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="number">35</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">35</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;bmax&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;age_range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*-25.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">225</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;bmax&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">49587</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;25.0-35.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">485</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;bmax&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">49795</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;35.0-*&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">290</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;bmax&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">49989</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="2-5-时间范围聚合"><a href="#2-5-时间范围聚合" class="headerlink" title="2.5 时间范围聚合"></a>2.5 时间范围聚合</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-bucket-daterange-aggregation.html">Date Range Aggregation</a>，日期范围聚合。基于日期类型的值，以【日期范围】来桶分聚合。期范围可以用各种 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/common-options.html#date-math">Date Math</a> 表达式。同样的，包括 from 的值，不包括 to 的值。它属于multi-bucket。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">POST /bank/_search?size=<span class="number">0</span></span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;date_range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MM-yyy&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ranges&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>   <span class="comment">//包含2个桶</span></span><br><span class="line">          <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now-10M/M&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now-10M/M&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*-2017-08-01T00:00:00.000Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="number">1501545600000</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;to_as_string&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2017-08-01T00:00:00.000Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span>undefined</span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2017-08-01T00:00:00.000Z-*&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">1501545600000</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;from_as_string&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2017-08-01T00:00:00.000Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="2-6-IP范围聚合"><a href="#2-6-IP范围聚合" class="headerlink" title="2.6 IP范围聚合"></a>2.6 IP范围聚合</h2><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations-bucket-iprange-aggregation.html">IP Range Aggregation</a>，基于一个 IPv4 字段，对文档进行【IPv4范围】的桶分聚合。和 Range Aggregation 类似，只是应用字段必须是 IPv4 数据类型。它属于multi-bucket。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">GET /ip_addresses/_search</span><br><span class="line"><span class="punctuation">&#123;</span>undefined</span><br><span class="line">    <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aggs&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;ip_ranges&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;ip_range&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">                <span class="attr">&quot;field&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;ranges&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span> <span class="attr">&quot;to&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;10.0.0.5&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="punctuation">&#123;</span> <span class="attr">&quot;from&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;10.0.0.5&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="comment">//返回</span></span><br><span class="line">    <span class="attr">&quot;aggregations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">        <span class="attr">&quot;ip_ranges&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>undefined</span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span>undefined</span><br><span class="line">                    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span>undefined</span><br><span class="line">                    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;doc_count&quot;</span><span class="punctuation">:</span> <span class="number">260</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决mac触控手势或快捷键失效</title>
      <link href="/2021/11/17/%E8%A7%A3%E5%86%B3mac%E8%A7%A6%E6%8E%A7%E6%89%8B%E5%8A%BF%E6%88%96%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%B1%E6%95%88/"/>
      <url>/2021/11/17/%E8%A7%A3%E5%86%B3mac%E8%A7%A6%E6%8E%A7%E6%89%8B%E5%8A%BF%E6%88%96%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%B1%E6%95%88/</url>
      
        <content type="html"><![CDATA[<h3 id="触控板手势失效"><a href="#触控板手势失效" class="headerlink" title="触控板手势失效"></a>触控板手势失效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall Dock</span><br></pre></td></tr></table></figure><h3 id="复制粘贴快捷键失效"><a href="#复制粘贴快捷键失效" class="headerlink" title="复制粘贴快捷键失效"></a>复制粘贴快捷键失效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall pboard</span><br></pre></td></tr></table></figure><h3 id="touchbar失效"><a href="#touchbar失效" class="headerlink" title="touchbar失效"></a>touchbar失效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkill TouchBarServer</span><br></pre></td></tr></table></figure><h3 id="左键单击失效"><a href="#左键单击失效" class="headerlink" title="左键单击失效"></a>左键单击失效</h3><p>检查外置设备接入，重新插拔即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python的解构赋值</title>
      <link href="/2021/08/02/python%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/"/>
      <url>/2021/08/02/python%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<p>解构是指将容器（比如列表、元组、集合、字典等）中的元素分别赋值给变量，可以用以下方式实现：</p><p>解构元组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tpl = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">a, b, c = tpl</span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 1 2 3 </span><br></pre></td></tr></table></figure><p>解构列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">a, b, c = lst</span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 1 2 3 </span><br></pre></td></tr></table></figure><p>解构集合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">st = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">a, b, c = st</span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 1 2 3</span><br></pre></td></tr></table></figure><p>解构字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line">a, b, c = d.values()</span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 1 2 3</span><br></pre></td></tr></table></figure><p>也可以使用 * 号以解构出剩余的值，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">a, b, *c = lst</span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; (1, 2, [3, 4, 5])</span><br></pre></td></tr></table></figure><p>解构也可以在函数调用时用于传递元组或字典的参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    <span class="built_in">print</span>(a, b, c)</span><br><span class="line"></span><br><span class="line">tpl = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">*tpl</span>)</span><br><span class="line">    </span><br><span class="line">d = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">**d</span>)  <span class="comment"># 等同于 print(a=1, b=2, c=3)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 1 2 3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python2/3中base64的使用差异</title>
      <link href="/2021/07/10/python2:3%E4%B8%ADbase64%E7%9A%84%E4%BD%BF%E7%94%A8%E5%B7%AE%E5%BC%82/"/>
      <url>/2021/07/10/python2:3%E4%B8%ADbase64%E7%9A%84%E4%BD%BF%E7%94%A8%E5%B7%AE%E5%BC%82/</url>
      
        <content type="html"><![CDATA[<h2 id="python2"><a href="#python2" class="headerlink" title="python2"></a>python2</h2><p>在python2中，base64可以直接操作string类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">msg = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">encoded = base64.b64encode(msg)</span><br><span class="line">decoded = base64.b64decode(encoded)</span><br><span class="line"><span class="built_in">print</span>(encoded, decoded)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; (&#x27;aGVsbG8gd29ybGQ=&#x27;, &#x27;Hello World&#x27;)</span><br></pre></td></tr></table></figure><h2 id="python3"><a href="#python3" class="headerlink" title="python3"></a>python3</h2><p>在python3中，base64只能操作bytes类型，直接编码会报错。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: a bytes-like object is required, not &#x27;str&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">msg = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">encoded = base64.b64encode(msg.encode(<span class="string">&quot;utf-8&quot;</span>)).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">decoded = base64.b64decode(encoded).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(encoded, decoded)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; (&#x27;aGVsbG8gd29ybGQ=&#x27;, &#x27;hello world&#x27;)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Python 2：字符串默认是字节串，Unicode字符串需要使用u前缀声明。</p><p>Python 3：字符串默认是Unicode字符串，字节串需要使用b前缀声明。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于JSON</title>
      <link href="/2021/06/28/%E5%85%B3%E4%BA%8EJSON/"/>
      <url>/2021/06/28/%E5%85%B3%E4%BA%8EJSON/</url>
      
        <content type="html"><![CDATA[<h2 id="一、啥是-JSON"><a href="#一、啥是-JSON" class="headerlink" title="一、啥是 JSON ?"></a>一、啥是 JSON ?</h2><p><code>JSON（JavaScript Object Notation）</code>是一种轻量级的数据交换格式，通过简洁、通用的语法规则来表达数据。它基于 JavaScript 语言的子集，但已成为一种独立于编程语言的通用数据格式。JSON 格式易于阅读和编写，同时也易于机器解析和生成，因此在网络传输和数据存储中被广泛应用。</p><h3 id="JSON-的两种基本结构："><a href="#JSON-的两种基本结构：" class="headerlink" title="JSON 的两种基本结构："></a>JSON 的两种基本结构：</h3><ol><li>对象（Object）：对象是一个无序的键值对集合，键值对之间使用逗号分隔，整个对象包含在花括号 <code>&#123;&#125;</code> 中。键是字符串，值可以是任意合法的 JSON 数据类型（字符串、数字、布尔值、数组、对象、null）。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小熊维尼&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;birthday&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1953&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>数组（Array）：数组是一个有序的值集合，值之间使用逗号分隔，整个数组包含在方括号 <code>[]</code> 中。数组中的值可以是任意合法的 JSON 数据类型。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="string">&quot;apple&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;banana&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;orange&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>JSON格式的数据可以被几乎所有编程语言解析和生成，因为它具有简洁、通用和易于理解的特点。在网络通信中，JSON格式常用于客户端和服务器之间的数据交换；在数据存储中，JSON格式也经常用于保存配置文件、日志数据等。JSON 是一种跨平台、通用的数据交换格式。</p><h2 id="二、python标准库中的JSON"><a href="#二、python标准库中的JSON" class="headerlink" title="二、python标准库中的JSON"></a>二、python标准库中的JSON</h2><p>Python 的标准库中提供了 JSON 模块，用于解析 JSON 格式的数据或将 Python 对象序列化为 JSON 格式。</p><h3 id="将JSON格式的字符串转换为python对象"><a href="#将JSON格式的字符串转换为python对象" class="headerlink" title="将JSON格式的字符串转换为python对象"></a>将JSON格式的字符串转换为python对象</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line"></span><br><span class="line">json_str = &#x27;<span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小熊维尼&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">70</span><span class="punctuation">,</span> <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Beijing&quot;</span><span class="punctuation">&#125;</span>&#x27;</span><br><span class="line">data = json.loads(json_str)</span><br><span class="line">print(data) </span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &#123;&#x27;name&#x27;: &#x27;小熊维尼&#x27;, &#x27;age&#x27;: 70, &#x27;city&#x27;: &#x27;Beijing&#x27;&#125;</span><br></pre></td></tr></table></figure><h2 id="将python对象转换为-JSON-字符串"><a href="#将python对象转换为-JSON-字符串" class="headerlink" title="将python对象转换为 JSON 字符串"></a>将python对象转换为 JSON 字符串</h2><p>使用 <code>json.dumps()</code> 函数可以将 Python 对象转换为 JSON 格式的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小熊维尼&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">70</span>, <span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>&#125;</span><br><span class="line">json_str = json.dumps(data, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(json_str)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &#123;&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot;&#125;</span><br></pre></td></tr></table></figure><p>可选参数（前三个最常用）</p><ol><li><code>default</code>：一个函数，用于自定义对象的序列化方式。如果对象无法被序列化，则会调用该函数，返回对象的可序列化表示。</li><li><code>indent</code>：一个整数或字符串，用于指定输出中的缩进量。如果是一个整数，则表示每级缩进的空格数；如果是一个字符串，则表示用于缩进的字符串，通常是一个空格或制表符。</li><li><code>ensure_ascii</code>：一个布尔值，默认为 True。如果设置为 True（默认值），则所有非 ASCII 字符将转义；如果设置为 False，则不会转义非 ASCII 字符，可用于处理包含非 ASCII 字符的数据。</li><li><code>cls</code>：一个 JSONEncoder 子类，用于自定义 JSON 序列化器。</li><li><code>skipkeys</code>：一个布尔值，默认为 False。如果设置为 True，则会跳过字典中不是字符串的键；如果设置为 False（默认值），则会引发 TypeError。</li><li><code>separators</code>：一个元组，默认为 (‘, ‘, ‘: ‘)。可以指定用于分隔元素的字符串，第一个元素用于分隔对象的键值对，第二个元素用于分隔数组的元素。</li><li><code>sort_keys</code>：一个布尔值，默认为 False。如果设置为 True，则会按照键的顺序对字典进行排序；如果设置为 False（默认值），则不会排序。</li><li><code>allow_nan</code>：一个布尔值，默认为 True。如果设置为 False，则在序列化过程中，如果遇到 NaN、Infinity 或 -Infinity 等特殊浮点数值，会抛出 ValueError 异常；如果设置为 True（默认值），则会将这些特殊值转换为相应的字符串。</li></ol><p>不能dumps的类型：</p><ol><li>不可序列化的对象：如自定义对象、函数、文件对象等。<code>json.dumps()</code> 函数只能序列化支持 JSON 数据类型的 Python 对象，包括字典、列表、字符串、数字、布尔值和 None。否则引发 <code>TypeError</code> 异常。</li><li>包含循环引用的对象：如果要序列化的对象包含循环引用（即对象之间相互引用，形成了环），则 <code>json.dumps()</code> 函数会抛出 ValueError 异常。JSON 格式不支持循环引用，因此无法将包含循环引用的对象转换为 JSON 格式。</li><li>包含特殊值的浮点数：JSON 规范中不支持 NaN、Infinity 和 -Infinity 等特殊的浮点数值。如果要序列化的对象包含这些特殊值，则会抛出 ValueError 异常。可以通过将 <code>allow_nan</code> 参数设置为 False 来禁止序列化特殊的浮点数值，但这样可能会导致 JSON 编码后的字符串无法被标准的 JSON 解析器解析。</li></ol><h2 id="从文件读取-JSON-数据"><a href="#从文件读取-JSON-数据" class="headerlink" title="从文件读取 JSON 数据"></a>从文件读取 JSON 数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;input_data.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = json.load(file)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><h2 id="将数据写入-JSON-文件"><a href="#将数据写入-JSON-文件" class="headerlink" title="将数据写入 JSON 文件"></a>将数据写入 JSON 文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小熊维尼&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">70</span>, <span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out_data.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    json.dump(data, file)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pymysql的几种游标类</title>
      <link href="/2021/05/17/pymysql%E7%9A%84%E5%87%A0%E7%A7%8D%E6%B8%B8%E6%A0%87%E7%B1%BB/"/>
      <url>/2021/05/17/pymysql%E7%9A%84%E5%87%A0%E7%A7%8D%E6%B8%B8%E6%A0%87%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="默认游标-Cursor"><a href="#默认游标-Cursor" class="headerlink" title="默认游标 Cursor"></a>默认游标 Cursor</h3><p>返回的查询结果为元组格式，其中元素的顺序与查询结果的列顺序一致。</p><h3 id="字典游标-DictCursor"><a href="#字典游标-DictCursor" class="headerlink" title="字典游标 DictCursor"></a>字典游标 DictCursor</h3><p>返回的查询结果为字典格式，其中键是列名，值是对应的字段值。</p><p>在建立数据库连接时通过 <code>cursorclass</code> 参数指定，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line">connection = pymysql.connect(</span><br><span class="line">    host=<span class="string">&#x27;your_host&#x27;</span>,</span><br><span class="line">    user=<span class="string">&#x27;your_user&#x27;</span>,</span><br><span class="line">    password=<span class="string">&#x27;your_password&#x27;</span>,</span><br><span class="line">    database=<span class="string">&#x27;your_database&#x27;</span>,</span><br><span class="line">    cursorclass=pymysql.cursors.DictCursor</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongo创建用户密码</title>
      <link href="/2021/04/18/mongo%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/"/>
      <url>/2021/04/18/mongo%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>在<code>admin</code>中创建用户，权限为<code>readWriteAnyDatabase</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(<span class="punctuation">&#123;</span></span><br><span class="line">  user<span class="punctuation">:</span> <span class="string">&quot;root&quot;</span><span class="punctuation">,</span></span><br><span class="line">  pwd<span class="punctuation">:</span> <span class="string">&quot;root&quot;</span><span class="punctuation">,</span></span><br><span class="line">  roles<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> role<span class="punctuation">:</span> <span class="string">&quot;readWriteAnyDatabase&quot;</span><span class="punctuation">,</span> db<span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span>)</span><br></pre></td></tr></table></figure><p>在配置中开启<code>authorization</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mongod.conf</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">security:</span><br><span class="line">  authorization: enabled</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mongo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git中fork和clone的区别</title>
      <link href="/2020/01/02/git%E7%9A%84fork/"/>
      <url>/2020/01/02/git%E7%9A%84fork/</url>
      
        <content type="html"><![CDATA[<h2 id="fork"><a href="#fork" class="headerlink" title="fork"></a>fork</h2><p>复制一个远程仓库到你自己的git账户下，等于拷贝了一个副本。可以随意的提交，不会影响到原仓库。</p><h2 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h2><p>将一个远程仓库连接到本地计算机上，但如果没权限，只能pull不能push。</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
